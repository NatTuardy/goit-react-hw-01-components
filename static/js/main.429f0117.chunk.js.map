{"version":3,"sources":["components/Profile/Profile.module.css","components/Statistics/Statistics.module.css","components/FriendList/FriendListItem.module.css","components/FriendList/FriendList.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Profile/Profile.js","components/Statistics/Statistics.js","components/FriendList/FriendListItem.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.js","components/App.js","index.js"],"names":["module","exports","Profile","className","styles","profile","description","src","user","avatar","alt","width","name","tag","location","stats","statsItem","label","quantity","followers","views","likes","randomColor","Math","floor","random","Statistics","title","statistics","statList","map","stat","key","id","item","style","backgroundColor","percentage","FriendListItem","isOnline","status","isActive","FriendList","friends","friendList","friend","TransactionHistory","items","transactionHistory","type","amount","currency","App","statisticalData","transactions","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.429f0117.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1ZmXC\",\"description\":\"Profile_description__3bFqj\",\"avatar\":\"Profile_avatar__2TCPa\",\"name\":\"Profile_name__jwwbr\",\"tag\":\"Profile_tag__2naca\",\"location\":\"Profile_location__2owbO\",\"stats\":\"Profile_stats__r3KYp\",\"statsItem\":\"Profile_statsItem__qP4ge\",\"label\":\"Profile_label__BM8UA\",\"quantity\":\"Profile_quantity__2Y4uf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__sNtrr\",\"title\":\"Statistics_title__31peD\",\"statList\":\"Statistics_statList__30ie_\",\"item\":\"Statistics_item__rnFsP\",\"label\":\"Statistics_label__3bf-H\",\"percentage\":\"Statistics_percentage__1HQMX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendListItem_item__Uvx8K\",\"status\":\"FriendListItem_status__3E3Dl\",\"isActive\":\"FriendListItem_isActive__3d1Pk FriendListItem_status__3E3Dl\",\"avatar\":\"FriendListItem_avatar__3mVL8\",\"name\":\"FriendListItem_name__2eSSq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__3cf0K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__YeRtv\"};","import React from 'react';\r\nimport user from '../user.json';\r\nimport styles from './Profile.module.css';\r\n\r\nconst Profile = () => {\r\n  return (\r\n    <div className={styles.profile}>\r\n      <div className={styles.description}>\r\n        <img\r\n          src={user.avatar}\r\n          alt=\"user avatar\"\r\n          className={styles.avatar}\r\n          width=\"240\"\r\n        />\r\n        <p className={styles.name}>{user.name}</p>\r\n        <p className={styles.tag}>{user.tag}</p>\r\n        <p className={styles.location}>{user.location}</p>\r\n      </div>\r\n\r\n      <ul className={styles.stats}>\r\n        <li className={styles.statsItem}>\r\n          <span className={styles.label}>Followers</span>\r\n          <span className={styles.quantity}>{user.stats.followers}</span>\r\n        </li>\r\n        <li className={styles.statsItem}>\r\n          <span className={styles.label}>Views</span>\r\n          <span className={styles.quantity}>{user.stats.views}</span>\r\n        </li>\r\n        <li className={styles.statsItem}>\r\n          <span className={styles.label}>Likes</span>\r\n          <span className={styles.quantity}>{user.stats.likes}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Statistics.module.css';\r\n\r\nconst randomColor = () => Math.floor(Math.random() * 255);\r\nconst colorRandom = () =>\r\n  `rgb(${randomColor()}, ${randomColor()}, ${randomColor()})`;\r\n\r\nconst Statistics = ({ title, stats = [] }) => (\r\n  <section className={styles.statistics}>\r\n    {title && <h2 className={styles.title}>{title}</h2>}\r\n\r\n    <ul className={styles.statList}>\r\n      {stats.map(stat => (\r\n        <li\r\n          key={stat.id}\r\n          className={styles.item}\r\n          style={{ backgroundColor: colorRandom() }}>\r\n          <span className={styles.label}>{stat.label}</span>\r\n          <span className={styles.percentage}>{stat.percentage}</span>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </section>\r\n);\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './FriendListItem.module.css';\r\n\r\nconst FriendListItem = ({ avatar, name, isOnline = true }) => (\r\n  <li className={styles.item}>\r\n    <span className={isOnline ? styles.status : styles.isActive}></span>\r\n    <img className={styles.avatar} src={avatar} alt=\"\" width=\"102\" />\r\n    <p className={styles.name}>{name}</p>\r\n  </li>\r\n);\r\n\r\nFriendListItem.propTypes = {\r\n  avatar: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n  isOnline: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default FriendListItem;\r\n","import React from 'react';\r\nimport FriendListItem from './FriendListItem';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './FriendList.module.css';\r\n\r\nconst FriendList = ({ friends = [] }) => (\r\n  <ul className={styles.friendList}>\r\n    {friends.map(friend => (\r\n      <FriendListItem key={friend.id} {...friend} />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({ id: PropTypes.number.isRequired }),\r\n  ).isRequired,\r\n};\r\n\r\nexport default FriendList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './TransactionHistory.module.css';\r\n\r\nconst TransactionHistory = ({ items = [] }) => (\r\n  <table className={styles.transactionHistory}>\r\n    <thead>\r\n      <tr>\r\n        <th>Type</th>\r\n        <th>Amount</th>\r\n        <th>Currency</th>\r\n      </tr>\r\n    </thead>\r\n\r\n    <tbody>\r\n      {items.map(({ id, type, amount, currency }) => (\r\n        <tr key={id}>\r\n          <td>{type}</td>\r\n          <td>{amount}</td>\r\n          <td>{currency}</td>\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  </table>\r\n);\r\n\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      type: PropTypes.string.isRequired,\r\n      amount: PropTypes.string.isRequired,\r\n      currency: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nexport default TransactionHistory;\r\n","import React from 'react';\r\nimport Profile from './Profile/Profile';\r\nimport Statistics from './Statistics/Statistics';\r\nimport statisticalData from './statistical-data.json';\r\nimport friends from './friends.json';\r\nimport FriendList from './FriendList/FriendList';\r\nimport transactions from './transactions.json';\r\nimport TransactionHistory from './TransactionHistory/TransactionHistory';\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <Profile />\r\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\r\n      <FriendList friends={friends} />\r\n      <TransactionHistory items={transactions} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\n// import './index.css';\n// import App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}